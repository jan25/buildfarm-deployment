version: "3.9"
services:
  
  cache:
    image: redis:5.0.9
    ports:
      - "6379:6379"
  
  server:
    image: bazelbuild/buildfarm-server:latest
    command:
      - "/var/lib/buildfarm-server/shard-server.config.example"
    ports:
      - "8980:8980"
    depends_on:
      - "cache"
    volumes:
      - ./config:/var/lib/buildfarm-server
    privileged: true
  
  worker:
    image: bazelbuild/buildfarm-worker:latest
    command:
      - "/var/lib/buildfarm-shard-worker/shard-worker.config.example"
      - "--public_name=worker:8981"
    depends_on: 
      - "cache"
    volumes:
      - "/tmp/worker:/tmp/worker"
      - "./config:/var/lib/buildfarm-shard-worker"
    ports:
      - "8981:8981"








# #!/bin/bash

# set -e

# # Start Buildfarm Cluster
# start_buildfarm () {
#   # Run Redis Container
#   docker run -d --name buildfarm-redis -p 6379:6379 --network bridge redis:5.0.9

#   # Run Buildfarm Server Container
#   docker run -d --name buildfarm-server -v $(pwd):/var/lib/buildfarm-server -p 8980:8980 --network bridge \
#   bazelbuild/buildfarm-server:latest /var/lib/buildfarm-server/shard-server.config.example -p 8980

#   # Run Buildfarm Shard Worker Container
#   mkdir -p /tmp/worker
#   docker run -d --name buildfarm-worker --privileged -v $(pwd):/var/lib/buildfarm-shard-worker \
#   -v /tmp/worker:/tmp/worker -p 8981:8981 --network bridge \
#   bazelbuild/buildfarm-worker:latest /var/lib/buildfarm-shard-worker/shard-worker.config.example --public_name=localhost:8981

#   echo "Buildfarm cluster started with endpoint: localhost:8980"
# }

# stop_buildfarm () {
#   docker stop buildfarm-server && docker rm buildfarm-server
#   docker stop buildfarm-worker && docker rm buildfarm-worker
#   docker stop buildfarm-redis && docker rm buildfarm-redis
# }

# init () {
#   case "$1" in
#   start)
#     start_buildfarm
#     ;;
#   stop)
#     stop_buildfarm
#     ;;
#   *)
#     echo $"Usage: $0 {start|stop}"
#     exit 1
# esac
# }

# init $1
